# PostgreSQL Database Configuration
# Copy this file to database.yml and update with your credentials

default: &default
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  host: <%= ENV['DATABASE_HOST'] || 'localhost' %>
  port: <%= ENV['DATABASE_PORT'] || 5432 %>
  username: <%= ENV['DATABASE_USERNAME'] %>
  password: <%= ENV['DATABASE_PASSWORD'] %>

development:
  <<: *default
  database: <%= ENV['DATABASE_NAME'] || 'hommuting_development' %>

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: <%= ENV['TEST_DATABASE_NAME'] || 'hommuting_test' %>

# For production, you can use either individual ENV vars or DATABASE_URL
production:
  primary:
    <<: *default
    # Option 1: Use DATABASE_URL (recommended for Heroku/Docker)
    url: <%= ENV['PRODUCTION_DATABASE_URL'] %>

    # Option 2: Use individual ENV vars
    # database: <%= ENV['PRODUCTION_DATABASE_NAME'] %>
    # username: <%= ENV['PRODUCTION_DATABASE_USERNAME'] %>
    # password: <%= ENV['PRODUCTION_DATABASE_PASSWORD'] %>
    # host: <%= ENV['PRODUCTION_DATABASE_HOST'] %>
    # port: <%= ENV['PRODUCTION_DATABASE_PORT'] %>

  # Solid adapters for production caching, queuing, and cable
  cache:
    <<: *default
    database: <%= ENV['CACHE_DATABASE_NAME'] || "#{ENV['DATABASE_NAME']}_cache" || 'hommuting_production_cache' %>
    migrations_paths: db/cache_migrate

  queue:
    <<: *default
    database: <%= ENV['QUEUE_DATABASE_NAME'] || "#{ENV['DATABASE_NAME']}_queue" || 'hommuting_production_queue' %>
    migrations_paths: db/queue_migrate

  cable:
    <<: *default
    database: <%= ENV['CABLE_DATABASE_NAME'] || "#{ENV['DATABASE_NAME']}_cable" || 'hommuting_production_cable' %>
    migrations_paths: db/cable_migrate